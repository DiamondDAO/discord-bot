{"version":3,"file":"umd.polyfill.js","sources":["../src/JsonStreamStringify.ts"],"sourcesContent":["import { Readable } from 'stream';\n\nconst rxEscapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n// table of character substitutions\nconst meta = {\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\f': '\\\\f',\n  '\\r': '\\\\r',\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n};\n\nfunction isReadableStream(value): boolean {\n  return typeof value.read === 'function'\n      && typeof value.pause === 'function'\n      && typeof value.resume === 'function'\n      && typeof value.pipe === 'function'\n      && typeof value.once === 'function'\n      && typeof value.removeListener === 'function';\n}\n\nfunction getType(value): Types {\n  if (!value) return Types.Primitive;\n  if (typeof value.then === 'function') return Types.Promise;\n  if (isReadableStream(value)) return value._readableState.objectMode ? Types.ReadableObject : Types.ReadableString;\n  if (Array.isArray(value)) return Types.Array;\n  if (typeof value === 'object' || value instanceof Object) return Types.Object;\n  return Types.Primitive;\n}\n\nenum Types {\n  Array,\n  Object,\n  ReadableString,\n  ReadableObject,\n  Primitive,\n  Promise,\n}\n\nconst stackItemOpen = [];\nstackItemOpen[Types.Array] = '[';\nstackItemOpen[Types.Object] = '{';\nstackItemOpen[Types.ReadableString] = '\"';\nstackItemOpen[Types.ReadableObject] = '[';\n\nconst stackItemEnd = [];\nstackItemEnd[Types.Array] = ']';\nstackItemEnd[Types.Object] = '}';\nstackItemEnd[Types.ReadableString] = '\"';\nstackItemEnd[Types.ReadableObject] = ']';\n\nconst processFunctionLookupTable = [];\n\nfor (const [key, val] of Object.entries(Types)) {\n  if (typeof val === 'number') processFunctionLookupTable[val] = `process${key}`;\n}\n\nfunction escapeString(string) {\n  // Modified code, original code by Douglas Crockford\n  // Original: https://github.com/douglascrockford/JSON-js/blob/master/json2.js\n\n  // If the string contains no control characters, no quote characters, and no\n  // backslash characters, then we can safely slap some quotes around it.\n  // Otherwise we must also replace the offending characters with safe escape\n  // sequences.\n\n  return string.replace(rxEscapable, (a) => {\n    const c = meta[a];\n    return typeof c === 'string' ? c : `\\\\u${a.charCodeAt(0).toString(16).padStart(4, '0')}`;\n  });\n}\n\nfunction quoteString(string: string) {\n  return `\"${escapeString(string)}\"`;\n}\n\nfunction readAsPromised(stream, size) {\n  const value = stream.read(size);\n  if (value === null) {\n    return new Promise((resolve, reject) => {\n      const endListener = () => resolve(null);\n      stream.once('end', endListener);\n      stream.once('error', reject);\n      stream.once('readable', () => {\n        stream.removeListener('end', endListener);\n        stream.removeListener('error', reject);\n        resolve(stream.read());\n      });\n    });\n  }\n  return Promise.resolve(value);\n}\n\nfunction recursiveResolve(promise: Promise<any>): Promise<any> {\n  return promise.then(res => getType(res) === Types.Promise ? recursiveResolve(res) : res);\n}\n\ninterface IStackItem {\n  key?: string;\n  index?: number;\n  type: Types;\n  value: any;\n  parent?: IStackItem;\n  first: boolean;\n  unread?: string[] | number;\n  isEmpty?: boolean;\n  arrayLength?: number;\n  readCount?: number;\n  end?: boolean;\n  addSeparatorAfterEnd?: boolean;\n}\n\ninterface IStackItemArray extends IStackItem {\n  unread: number;\n  isEmpty: boolean;\n  arrayLength: number;\n}\n\ninterface IStackItemObject extends IStackItem {\n  unread: string[];\n}\n\ntype VisitedWeakMap = WeakMap<any, string>;\ntype VisitedWeakSet = WeakSet<any>;\nclass JsonStreamStringify extends Readable {\n  private visited: VisitedWeakMap | VisitedWeakSet;\n  private stack: IStackItem[] = [];\n  private replacerFunction?: Function;\n  private replacerArray?: any[];\n  private gap?: string;\n  private depth: number = 0;\n  private error: boolean;\n  private pushCalled: boolean = false;\n  private end: boolean = false;\n  private isReading: boolean = false;\n  private readMore: boolean = false;\n\n  constructor(value, replacer?: Function | any[], spaces?: number | string, private cycle: boolean = false) {\n    super({ encoding: 'utf8' });\n    const spaceType = typeof spaces;\n    if (spaceType === 'string' || spaceType === 'number') {\n      this.gap = Number.isFinite(spaces as number) ? ' '.repeat(spaces as number) : spaces as string;\n    }\n    Object.assign(this, {\n      visited: cycle ? new WeakMap() : new WeakSet(),\n      replacerFunction: replacer instanceof Function && replacer,\n      replacerArray: Array.isArray(replacer) && replacer,\n    });\n    if (replacer instanceof Function) this.replacerFunction = replacer;\n    if (Array.isArray(replacer)) this.replacerArray = replacer;\n    this.addToStack(value);\n  }\n\n  private cycler(key, value) {\n    const existingPath = (this.visited as VisitedWeakMap).get(value);\n    if (existingPath) {\n      return {\n        $ref: existingPath,\n      };\n    }\n    let path = this.path();\n    if (key !== undefined) path.push(key);\n    path = path.map(v => `[${(Number.isInteger(v as number) ? v : quoteString(v as string))}]`);\n    (this.visited as VisitedWeakMap).set(value, path.length ? `$${path.join('')}` : '$');\n    return value;\n  }\n\n  private addToStack(value, key?: string, index?: number, parent?: IStackItem) {\n    let realValue = value;\n    if (this.replacerFunction) {\n      realValue = this.replacerFunction(key || index, realValue, this);\n    }\n    // ORDER?\n    if (realValue && realValue.toJSON instanceof Function) {\n      realValue = realValue.toJSON();\n    }\n    if (realValue instanceof Function || typeof value === 'symbol') {\n      realValue = undefined;\n    }\n    if (key !== undefined && this.replacerArray) {\n      if (!this.replacerArray.includes(key)) {\n        realValue = undefined;\n      }\n    }\n    let type = getType(realValue);\n    if (((parent && parent.type === Types.Array) ? true : realValue !== undefined) && type !== Types.Promise) {\n      if (parent && !parent.first) {\n        this._push(',');\n      }\n      if (parent) parent.first = false;\n    }\n    if (realValue !== undefined && type !== Types.Promise && key) {\n      if (this.gap) {\n        this._push(`\\n${this.gap.repeat(this.depth)}\"${escapeString(key)}\": `);\n      } else {\n        this._push(`\"${escapeString(key)}\":`);\n      }\n    }\n    if (type !== Types.Primitive) {\n      if (this.cycle) {\n        // run cycler\n        realValue = this.cycler(key || index, realValue);\n        type = getType(realValue);\n      } else {\n        // check for circular structure\n        if (this.visited.has(realValue)) {\n          throw Object.assign(new Error('Converting circular structure to JSON'), {\n            realValue,\n            key: key || index,\n          });\n        }\n        (this.visited as VisitedWeakSet).add(realValue);\n      }\n    }\n\n    if (!key && index > -1 && this.depth && this.gap) this._push(`\\n${this.gap.repeat(this.depth)}`);\n\n    const open = stackItemOpen[type];\n    if (open) this._push(open);\n\n    const obj: IStackItem = {\n      key,\n      index,\n      type,\n      parent,\n      value: realValue,\n      first: true,\n    };\n\n    if (type === Types.Object) {\n      this.depth += 1;\n      obj.unread = Object.keys(realValue);\n      obj.isEmpty = !obj.unread.length;\n    } else if (type === Types.Array) {\n      this.depth += 1;\n      obj.unread = realValue.length;\n      obj.arrayLength = <number>obj.unread;\n      obj.isEmpty = !obj.unread;\n    } else if (type === Types.ReadableString || type === Types.ReadableObject) {\n      this.depth += 1;\n      if (realValue.readableEnded || realValue._readableState?.endEmitted) {\n        this.emit('error', new Error('Readable Stream has ended before it was serialized. All stream data have been lost'), realValue, key || index);\n      } else if (realValue.readableFlowing || realValue._readableState?.flowing) {\n        realValue.pause();\n        this.emit('error', new Error('Readable Stream is in flowing mode, data may have been lost. Trying to pause stream.'), realValue, key || index);\n      }\n      obj.readCount = 0;\n      realValue.once('end', () => {\n        obj.end = true;\n        this.__read();\n      });\n      realValue.once('error', (err) => {\n        this.error = true;\n        this.emit('error', err);\n      });\n    }\n    this.stack.unshift(obj);\n    return obj;\n  }\n\n  private removeFromStack(item: IStackItem) {\n    const {\n      type,\n    } = item;\n    const isObject = type === Types.Object || type === Types.Array || type === Types.ReadableString || type === Types.ReadableObject;\n    if (type !== Types.Primitive) {\n      if (!this.cycle) {\n        this.visited.delete(item.value);\n      }\n      if (isObject) {\n        this.depth -= 1;\n      }\n    }\n\n    const end = stackItemEnd[type];\n    if (isObject && !item.isEmpty && this.gap) this._push(`\\n${this.gap.repeat(this.depth)}`);\n    if (end) this._push(end);\n    const stackIndex = this.stack.indexOf(item);\n    this.stack.splice(stackIndex, 1);\n  }\n\n  // tslint:disable-next-line:function-name\n  private _push(data) {\n    this.pushCalled = true;\n    this.push(data);\n  }\n\n  private processReadableObject(current: IStackItem, size: number) {\n    if (current.end) {\n      this.removeFromStack(current);\n      return undefined;\n    }\n    return readAsPromised(current.value, size)\n      .then((value) => {\n        if (value !== null) {\n          if (!current.first) {\n            this._push(',');\n          }\n          current.first = false;\n          this.addToStack(value, undefined, current.readCount);\n          current.readCount += 1;\n        }\n      });\n  }\n\n  private processObject(current: IStackItemObject) {\n    // when no keys left, remove obj from stack\n    if (!current.unread.length) {\n      this.removeFromStack(current);\n      return;\n    }\n    const key = current.unread.shift();\n    const value = current.value[key];\n    this.addToStack(value, key, undefined, current);\n  }\n\n  private processArray(current: IStackItemArray) {\n    const key = <number>current.unread;\n    if (!key) {\n      this.removeFromStack(current);\n      return;\n    }\n    const index = current.arrayLength - key;\n    const value = current.value[index];\n    current.unread -= 1;\n    this.addToStack(value, undefined, index, current);\n  }\n\n  processPrimitive(current: IStackItem) {\n    if (current.value !== undefined) {\n      const type = typeof current.value;\n      let value;\n      switch (type) {\n        case 'string':\n          value = quoteString(current.value);\n          break;\n        case 'number':\n          value = Number.isFinite(current.value) ? String(current.value) : 'null';\n          break;\n        case 'bigint':\n          value = String(current.value);\n          break;\n        case 'boolean':\n          value = String(current.value);\n          break;\n        case 'object':\n          if (!current.value) {\n            value = 'null';\n            break;\n          }\n        default:\n          // This should never happen, I can't imagine a situation where this executes.\n          // If you find a way, please open a ticket or PR\n          throw Object.assign(new Error(`Unknown type \"${type}\". Please file an issue!`), {\n            value: current.value,\n          });\n      }\n      this._push(value);\n    } else if (this.stack[1] && (this.stack[1].type === Types.Array || this.stack[1].type === Types.ReadableObject)) {\n      this._push('null');\n    } else {\n      current.addSeparatorAfterEnd = false;\n    }\n    this.removeFromStack(current);\n  }\n\n  private processReadableString(current: IStackItem, size: number) {\n    if (current.end) {\n      this.removeFromStack(current);\n      return undefined;\n    }\n    return readAsPromised(current.value, size)\n      .then((value) => {\n        if (value) this._push(escapeString(value.toString()));\n      });\n  }\n\n  private processPromise(current: IStackItem) {\n    return recursiveResolve(current.value).then((value) => {\n      this.removeFromStack(current);\n      this.addToStack(value, current.key, current.index, current.parent);\n    });\n  }\n\n  private processStackTopItem(size: number) {\n    const current = this.stack[0];\n    if (!current || this.error) return Promise.resolve();\n    let out;\n    try {\n      out = this[processFunctionLookupTable[current.type]](current, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    return Promise.resolve(out)\n      .then(() => {\n        if (this.stack.length === 0) {\n          this.end = true;\n          this._push(null);\n        }\n      });\n  }\n\n  // tslint:disable-next-line:function-name\n  private __read(size?: number) {\n    if (this.isReading || this.error) {\n      this.readMore = true;\n      return undefined;\n    }\n    this.isReading = true;\n\n    // we must continue to read while push has not been called\n    this.readMore = false;\n    return this.processStackTopItem(size)\n      .then(() => {\n        const readAgain = !this.end && !this.error && (this.readMore || !this.pushCalled);\n        if (readAgain) {\n          setImmediate(() => {\n            this.isReading = false;\n            this.__read();\n          });\n        } else {\n          this.isReading = false;\n        }\n      })\n      .catch((err) => {\n        this.error = true;\n        this.emit('error', err);\n      });\n  }\n\n  // tslint:disable-next-line:function-name\n  _read(size: number) {\n    this.pushCalled = false;\n    this.__read(size);\n  }\n\n  path() {\n    return this.stack.map(({\n      key,\n      index,\n    }) => key || index).filter(v => v || v > -1).reverse();\n  }\n}\n\nexport default JsonStreamStringify;\n"],"names":["rxEscapable","meta","isReadableStream","value","read","pause","resume","pipe","once","removeListener","getType","Types","Primitive","then","Promise","_readableState","objectMode","ReadableObject","ReadableString","Array","isArray","Object","stackItemOpen","stackItemEnd","processFunctionLookupTable","entries","key","val","escapeString","string","replace","a","c","charCodeAt","toString","padStart","quoteString","readAsPromised","stream","size","resolve","reject","endListener","recursiveResolve","promise","res","JsonStreamStringify","replacer","spaces","cycle","encoding","spaceType","gap","Number","isFinite","repeat","assign","visited","WeakMap","WeakSet","replacerFunction","Function","replacerArray","addToStack","existingPath","get","$ref","path","undefined","push","map","v","isInteger","set","length","join","index","parent","realValue","toJSON","includes","type","first","_push","depth","cycler","has","Error","add","open","obj","unread","keys","isEmpty","arrayLength","readableEnded","endEmitted","emit","readableFlowing","flowing","readCount","end","__read","err","error","stack","unshift","item","isObject","stackIndex","indexOf","splice","data","pushCalled","current","removeFromStack","shift","String","addSeparatorAfterEnd","out","isReading","readMore","processStackTopItem","readAgain","setImmediate","filter","reverse","Readable"],"mappings":"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"}